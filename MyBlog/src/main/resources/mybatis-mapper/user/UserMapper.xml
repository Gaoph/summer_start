<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myblog.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.myblog.entity.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_password" property="userPassword" jdbcType="VARCHAR"/>
        <result column="user_nickname" property="userNickname" jdbcType="VARCHAR"/>
        <result column="user_sex" property="userSex" jdbcType="VARCHAR"/>
        <result column="user_age" property="userAge" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    user_id, user_name, user_password, user_nickname, user_sex, user_age
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.myblog.entity.User">
    insert into user (user_id, user_name, user_password, 
      user_nickname, user_sex, user_age
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userNickname,jdbcType=VARCHAR}, #{userSex,jdbcType=VARCHAR}, #{userAge,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.myblog.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userNickname != null">
                user_nickname,
            </if>
            <if test="userSex != null">
                user_sex,
            </if>
            <if test="userAge != null">
                user_age,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userNickname != null">
                #{userNickname,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                #{userSex,jdbcType=VARCHAR},
            </if>
            <if test="userAge != null">
                #{userAge,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.myblog.entity.User">
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userNickname != null">
                user_nickname = #{userNickname,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                user_sex = #{userSex,jdbcType=VARCHAR},
            </if>
            <if test="userAge != null">
                user_age = #{userAge,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.myblog.entity.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=VARCHAR},
      user_age = #{userAge,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
    <select id="getUserList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>
    <!---->
    <select id="selectByName" parameterType="com.myblog.entity.User" resultMap="BaseResultMap">
        select * from user where user_name=#{userName}
    </select>
</mapper>